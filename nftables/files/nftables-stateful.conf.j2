#!/usr/sbin/nft -f

flush ruleset

{%- set public_interface = salt['pillar.get']('nftables:public_interface', 'eth0') %}
{%- set host_inet_filter_input = salt['pillar.get']('nftables:configuration:tables:inet:filter:input:rules') %}
{%- set host_inet_filter_output = salt['pillar.get']('nftables:configuration:tables:inet:filter:output:rules') %}
{%- set host_inet_filter_forward = salt['pillar.get']('nftables:configuration:tables:inet:filter:forward:rules') %}

table inet filter {
    chain input {
        type filter hook input priority 0; policy drop;

        # accept any localhost traffic
        iif lo accept comment "accept loopback"
        iif != lo ip daddr 127.0.0.1/8 counter drop comment "drop connections to loopback not coming from loopback"
        iif != lo ip6 daddr ::1/128 counter drop comment "drop connections to loopback not coming from loopback"

        ct state invalid counter drop comment "drop invalid"
        ct state established,related counter accept comment "accept traffic originated from us"

        ip protocol icmp counter accept comment "accept all ICMP types"
        ip6 nexthdr icmpv6 counter accept comment "accept all ICMP types"

{% if host_inet_filter_input|length %}
        # host specific rules - START
    {%- for block_name in host_inet_filter_input %}
        {{ block_name }}
    {%- endfor %}
        # host specific rules - END
{%- endif %}

        tcp dport ssh ct state new accept comment "accept ssh"

        tcp dport 5201 counter accept comment "accept iperf3"

        # accept neighbour discovery otherwise IPv6 connectivity breaks.
        ip6 nexthdr icmpv6 icmpv6 type { nd-neighbor-solicit,  nd-router-advert, nd-neighbor-advert } accept comment "accept neighbour discovery"

        # log prefix "[nftables] Input: " flags all
    }
    chain forward {
        type filter hook forward priority 0; policy {{ salt['pillar.get']('nftables:configuration:tables:inet:filter:forward:policy', "drop") }};

{% if host_inet_filter_forward|length %}
        # host specific rules - START
    {%- for block_name in host_inet_filter_forward %}
        {{ block_name }}
    {%- endfor %}
        # host specific rules - END
{%- endif %}

        # log prefix "[nftables] forward: " flags all
        # counter comment "count packets"
    }
    chain output {
        type filter hook output priority 0; policy {{ salt['pillar.get']('nftables:configuration:tables:inet:filter:output:policy', "accept") }};

{% if host_inet_filter_output|length %}
        # host specific rules - START
    {%- for block_name in host_inet_filter_output %}
        {{ block_name }}
    {%- endfor %}
        # host specific rules - END
{%- endif %}

        counter comment "count accepted packets"
    }
}

{% for i in range(0, 10) %}
include "/etc/nftables.d/{{ i }}*.conf";
{%- endfor %}
